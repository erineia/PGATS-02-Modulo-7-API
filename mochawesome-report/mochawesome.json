{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2025-09-10T13:26:10.889Z",
    "end": "2025-09-10T13:26:10.941Z",
    "duration": 52,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c13f1ada-2bb9-417b-98c0-66159db1a566",
      "title": "",
      "fullFile": "C:\\Users\\erine\\Documents\\Pos-Graduação\\Módulo-7-Automação de Testes na Camada de Serviço (API)\\PGATS-02-Modulo-7-API\\test\\graphql\\external\\transferExternalGraphql.test.js",
      "file": "\\test\\graphql\\external\\transferExternalGraphql.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f970fb70-9536-4c7c-afb0-ca53129be2f7",
          "title": "Mutation: Transferencias",
          "fullFile": "C:\\Users\\erine\\Documents\\Pos-Graduação\\Módulo-7-Automação de Testes na Camada de Serviço (API)\\PGATS-02-Modulo-7-API\\test\\graphql\\external\\transferExternalGraphql.test.js",
          "file": "\\test\\graphql\\external\\transferExternalGraphql.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Mutation: Transferencias\"",
              "fullTitle": "Mutation: Transferencias \"before all\" hook in \"Mutation: Transferencias\"",
              "timedOut": false,
              "duration": 28,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const loginUser = require('../fixture/requisicoes/login/loginUser.json');\nconst res = await request(graphqlUrl).post('').send(loginUser);\ntoken = res.body.data.loginUser.token;",
              "err": {},
              "uuid": "0b96265d-7c0b-4873-b239-486bdc0092d1",
              "parentUUID": "f970fb70-9536-4c7c-afb0-ca53129be2f7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "a) Transferência com sucesso",
              "fullTitle": "Mutation: Transferencias a) Transferência com sucesso",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const respostaEsperada = require('../fixture/respostas/transferencia/validarTransferenciaComSucesso.json');\nconst createTransfer = require('../fixture/requisicoes/transferencia/createTransfer.json');\nconst res = await request(graphqlUrl)\n  .post('')\n  .set('Authorization', `Bearer ${token}`)\n  .send(createTransfer);\nexpect(res.status).to.equal(200);\nexpect(res.body.data.createTransfer)\n  .excluding('date')\n  .to.deep.equal(respostaEsperada.data.createTransfer);",
              "err": {},
              "uuid": "0e58fc20-f713-4e31-8928-06dbc2048a69",
              "parentUUID": "f970fb70-9536-4c7c-afb0-ca53129be2f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "b) Sem saldo disponível para transferência",
              "fullTitle": "Mutation: Transferencias b) Sem saldo disponível para transferência",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const createTransfer = require('../fixture/requisicoes/transferencia/createTransfer.json');\ncreateTransfer.variables.amount = 5000;\nconst res = await request(graphqlUrl)\n  .post('')\n  .set('Authorization', `Bearer ${token}`)\n  .send(createTransfer);\nexpect(res.status).to.equal(200);\nexpect(res.body.errors[0].message).to.equal(\n  'Saldo insuficiente para transferência',\n);",
              "err": {},
              "uuid": "8271fa78-87f8-4bd5-94b7-357ee72d4193",
              "parentUUID": "f970fb70-9536-4c7c-afb0-ca53129be2f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "c) Token de autenticação não informado",
              "fullTitle": "Mutation: Transferencias c) Token de autenticação não informado",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const createTransfer = require('../fixture/requisicoes/transferencia/createTransfer.json');\nconst res = await request(graphqlUrl).post('').send(createTransfer);\nexpect(res.status).to.equal(200);\nexpect(res.body.errors[0].message).to.equal('Autenticação obrigatória');",
              "err": {},
              "uuid": "17efdf63-a957-4eef-a385-77cb1cea6cfc",
              "parentUUID": "f970fb70-9536-4c7c-afb0-ca53129be2f7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0e58fc20-f713-4e31-8928-06dbc2048a69",
            "8271fa78-87f8-4bd5-94b7-357ee72d4193",
            "17efdf63-a957-4eef-a385-77cb1cea6cfc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}